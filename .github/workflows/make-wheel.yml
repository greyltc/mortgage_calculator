name: CI
run-name: ${{ github.actor }} builds a wheel
on:
  push:
    branches: [ main ]
  release:
    types: [ published ]
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      ACTIONS_BOT_NAME: github-actions[bot]
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get remove --assume-yes man-db manpages
          sudo apt-get install --assume-yes python3-build python3-wheel python3-hatchling python3-hatch-vcs
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build wheel
        run: |
          python -m build --wheel --no-isolation
          pwd
          ls ${{ github.workspace }}
          ls -al dist
          python -m build --version
          python -m wheel version
          python -m hatchling version
          echo "A redacted token is: ${{ secrets.GITHUB_TOKEN }}"
      - name: Make asset generic
        if: ${{ github.event_name == 'release' }}
        run: |
         cd dist
         for f in *.whl; do
           ln -s "$f" "$(echo $f | cut -d'-' -f1,3-)"
         done
         cd -
      - name: Attach asset(s) to release
        if: ${{ github.event_name == 'release' }}
        run: |
          echo "Finding latest release..."
          curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository }}/releases/latest \
            --output rel_resp.json
          ASSET_UL_URL=$(cat rel_resp.json | jq --raw-output '.upload_url' | sed "s|{?.*||g")
          echo "Uploads will be made to ${ASSET_UL_URL}"        

          do_asset_things() {
            local ASSET_FILE="$(realpath "${1}")"
            local AUU="${2}"
            ASSET_NAME="$(basename ${ASSET_FILE})"
            ASSET_UL_URL="${AUU}?name=${ASSET_NAME}"
            
            # upload asset
            echo "Uploading asset ${ASSET_FILE} to ${ASSET_UL_URL}"
            # https://docs.github.com/en/rest/reference/releases#upload-a-release-asset
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Content-Type: $(file --brief --mime-type ${ASSET_FILE})" \
              "${ASSET_UL_URL}" \
              --data-binary "@${ASSET_FILE}" \
              --output asset_resp.json
            ASSET_URL=$(cat asset_resp.json | jq --raw-output '.url')
            echo "Asset upload done."
          }
          export -f do_asset_things

          find dist -maxdepth 1 -type f,l -exec bash -c 'do_asset_things "${0}" "${1}"' "{}" "${ASSET_UL_URL}" \;
      - name: Print status
        run: |
          echo "This job's status is ${{ job.status }}."
